#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://nagios-plugins.org/doc/guidelines.html

__author__  = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2019041801'

DESCRIPTION = 'Displays the top 3 processes which cause the most IO.'

#====================

from lib.globals import *

try:
    import psutil
except ImportError, e:
    print('Python module "psutil" is not installed. Try `yum -y install epel-release;yum -y install python2-psutil`.')
    exit(STATE_UNKNOWN)

from lib.output import bytes2human
import argparse

def define_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument('-V', '--version',
        action = 'version',
        version = '%(prog)s: v{} by {}'.format(__version__, __author__)
        )

    return parser.parse_args()


def main():
    # parse the command line, exit with UNKNOWN if it fails
    try:
        parsed = define_args()
    except SystemExit as e:
        exit(STATE_UNKNOWN)
        
    msg = ''
    cnt = {}

    # only works with psutil version >= 5.3.0
    # for p in psutil.process_iter(attrs=['name', 'io_counters']):
    #     if p.info['io_counters']:
    #         cnt[p.info['name']] += sum(p.info['io_counters'][:2])
    try:
        for p in [x.as_dict(attrs=['name', 'io_counters']) for x in psutil.process_iter()]:
            if p['io_counters']:
                cnt[p['name']] = [x + y for x, y in zip(cnt.get(p['name'], [0, 0]), [p['io_counters'].read_bytes, p['io_counters'].write_bytes])]
    except psutil.NoSuchProcess:
        pass
        
    for i, item in enumerate(sorted(cnt.items(), key=lambda item : sum(item[1]), reverse=True)[:3]):
        msg += '{}. {}: {}/{}, '.format(i + 1, item[0], bytes2human(item[1][0]), bytes2human(item[1][1]))

    print(msg[:-2] + ' (r/w)') # strip trailing ', '
    exit(STATE_OK)

main()
