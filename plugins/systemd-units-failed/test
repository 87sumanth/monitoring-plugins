#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://git.linuxfabrik.ch/linuxfabrik-icinga-plugins/checks-linux/-/blob/master/CONTRIBUTING.md

import unittest

from lib.globals import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base

        
class TestCheck(unittest.TestCase):

    check = './systemd-units-failed'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.base.shell_exec(self.check + ' --test=examples/EXAMPLE01,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base.coe(lib.base.shell_exec(self.check + ' --test=examples/EXAMPLE02,,0'))
        self.assertRegexpMatches(stdout, r'There is 1 failed unit.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base.coe(lib.base.shell_exec(self.check + ' --test=examples/EXAMPLE03,,0'))
        self.assertRegexpMatches(stdout, r'There are 2 failed units.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    
if __name__ == '__main__':
    unittest.main()