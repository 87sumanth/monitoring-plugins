#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://nagios-plugins.org/doc/guidelines.html

__author__  = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2019111401'

DESCRIPTION = 'todo'

command = 'mailq'

MAILQ_EMPTY = 'Mail queue is empty'

#====================
import argparse

from lib.globals import *
from lib.execute_command import execute_command
from lib.parse_input import evaluate_greater
from lib.output import unpack_perfdata

def parse_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument('-V', '--version', action='version', version='{0}: v{1} by {2}' . format('%(prog)s', __version__, __author__))
    
    return parser.parse_args()


def main():
    try:
        parsed = parse_args()
    except:
        print('Argument parsing failed')
        exit(STATE_UNKNOWN)


    sp = execute_command(command)
    result, command_err = sp.communicate()
    if (command_err):
        print(command_err)
        exit(STATE_UNKNOWN)

    result = '''
    -Queue ID- --Size-- ----Arrival Time---- -Sender/Recipient-------
305BA10EE42      646 Wed Sep 18 13:56:04  noreply@sassan.ch
(Host or domain name not found. Name service error for name=loginwads-68.hoststar.ch type=AAAA: Host not found)
                                         root@sassan.ch

19FE710EE43      646 Wed Sep 18 14:09:35  noreply@sassan.ch
(Host or domain name not found. Name service error for name=loginwads-68.hoststar.ch type=AAAA: Host not found)
                                         root@sassan.ch

-- 1 Kbytes in 2 Requests.
'''

    for line in reversed(result.splitlines()):
        print('line: ' + str(line))
        # if MAILQ_EMPTY in result:
        #     undelivered_mails = 0
        #     break
        # else:
        #     undelivered_mails = 10

    exit()
    undelivered_mails_data = Data('undelivered-mails', undelivered_mails, 1, None)

    global_state = evaluate_greater((undelivered_mails_data.value, undelivered_mails_data.warn, undelivered_mails_data.crit))

    perfdata = unpack_perfdata((undelivered_mails_data.label, undelivered_mails_data.value, None, undelivered_mails_data.warn, undelivered_mails_data.crit, 0, None))
        
    msg = 'Undelivered mails: {0}'.format(undelivered_mails_data.value)

    print(msg.strip() + '|' + perfdata.strip())
    exit(global_state)

if __name__ == '__main__':
    main()
