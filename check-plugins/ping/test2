#! /usr/bin/env python2
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

from lib.globals2 import *

import lib.base2

import unittest

        
class TestCheck(unittest.TestCase):

    def test_ping_127_0_0_1(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname 127.0.0.1'))
        self.assertRegexpMatches(stdout, r'^PING 127\.0\.0\.1: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname localhost'))
        self.assertRegexpMatches(stdout, r'^PING localhost: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost_localdomain(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname localhost.localdomain'))
        self.assertRegexpMatches(stdout, r'^PING localhost\.localdomain: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost_loc(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname localhost.loc'))
        self.assertRegexpMatches(stdout, r'^ping: localhost.loc: Name or service not known')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_ping_www_linuxfabrik_ch(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname www.linuxfabrik.ch'))
        self.assertRegexpMatches(stdout, r'^PING www\.linuxfabrik\.ch')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_1_2_3_4_5_6(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname 1.2.3.4.5.6'))
        self.assertRegexpMatches(stdout, r'^ping: 1.2.3.4.5.6: Name or service not known')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_ping_99_99_99_99(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('./ping2 --hostname 99.99.99.99'))
        self.assertRegexpMatches(stdout, r'^Destination Host Unreachable\. PING 99\.99\.99\.99')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)
   

if __name__ == '__main__':
    unittest.main()