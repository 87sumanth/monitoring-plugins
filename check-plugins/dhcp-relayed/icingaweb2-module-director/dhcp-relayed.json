{
    "Command": {
        "cmd-check-dhcp-relayed": {
            "arguments": {
                "--always-ok": {
                    "set_if": "$dhcp_relayed_always_ok$"
                },
                "--mac": {
                    "value": "$dhcp_relayed_mac$"
                },
                "--timeout": {
                    "value": "$dhcp_relayed_timeout$"
                }
            },
            "command": "/usr/bin/sudo /usr/lib64/nagios/plugins/dhcp-relayed",
            "disabled": false,
            "fields": [
                {
                    "datafield_id": 1,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 2,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 3,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "imports": [],
            "is_string": null,
            "methods_execute": "PluginCheck",
            "object_name": "cmd-check-dhcp-relayed",
            "object_type": "object",
            "timeout": "10",
            "vars": {},
            "zone": null,
            "uuid": "34d2509a-e806-4959-863c-ca33d2f3072b"
        },
        "cmd-check-dhcp-relayed-windows": {
            "arguments": {
                "--always-ok": {
                    "set_if": "$dhcp_relayed_windows_always_ok$"
                },
                "--mac": {
                    "value": "$dhcp_relayed_windows_mac$"
                },
                "--timeout": {
                    "value": "$dhcp_relayed_windows_timeout$"
                }
            },
            "command": "C:\\ProgramData\\icinga2\\usr\\lib64\\nagios\\plugins\\dhcp-relayed.exe",
            "disabled": false,
            "fields": [
                {
                    "datafield_id": 4,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 5,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 6,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "imports": [],
            "is_string": null,
            "methods_execute": "PluginCheck",
            "object_name": "cmd-check-dhcp-relayed-windows",
            "object_type": "object",
            "timeout": "10",
            "vars": {},
            "zone": null,
            "uuid": "2738aeed-d4a3-4926-a069-91a8ed388ea2"
        },
        "cmd-check-dhcp-relayed-windows-python": {
            "arguments": {},
            "command": "C:\\Windows\\py C:\\ProgramData\\icinga2\\usr\\lib64\\nagios\\plugins\\dhcp-relayed.py",
            "disabled": false,
            "fields": [],
            "imports": [
                "cmd-check-dhcp-relayed-windows"
            ],
            "is_string": null,
            "methods_execute": null,
            "object_name": "cmd-check-dhcp-relayed-windows-python",
            "object_type": "object",
            "timeout": null,
            "vars": {},
            "zone": null,
            "uuid": "e9fa2b7f-e8cf-4bf9-b424-897c3ebaee10"
        }
    },
    "ServiceTemplate": {
        "tpl-service-dhcp-relayed": {
            "action_url": null,
            "apply_for": null,
            "assign_filter": null,
            "check_command": "cmd-check-dhcp-relayed",
            "check_interval": 300,
            "check_period": null,
            "check_timeout": null,
            "command_endpoint": null,
            "disabled": false,
            "display_name": null,
            "enable_active_checks": null,
            "enable_event_handler": null,
            "enable_flapping": null,
            "enable_notifications": true,
            "enable_passive_checks": null,
            "enable_perfdata": false,
            "event_command": null,
            "fields": [],
            "flapping_threshold_high": null,
            "flapping_threshold_low": null,
            "groups": [],
            "host": null,
            "icon_image": "dhcp-relayed.png",
            "icon_image_alt": null,
            "imports": [
                "tpl-service-generic"
            ],
            "max_check_attempts": 5,
            "notes": "This plugin tests if a DHCP server (local or remote) can offer IPv4 addresses. It emulates a DHCP client and checks the DHCP offer response from the DHCP server. It does not send a DHCP request. ",
            "notes_url": "https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/dhcp-relayed",
            "object_name": "tpl-service-dhcp-relayed",
            "object_type": "template",
            "retry_interval": 30,
            "service_set": null,
            "template_choice": null,
            "use_agent": null,
            "use_var_overrides": null,
            "vars": {
                "criticality": "A",
                "dhcp_relayed_always_ok": false,
                "dhcp_relayed_timeout": 7
            },
            "volatile": null,
            "zone": null,
            "uuid": "e19de56b-a90c-4925-925e-5060ceb83a37"
        },
        "tpl-service-dhcp-relayed-windows": {
            "action_url": null,
            "apply_for": null,
            "assign_filter": null,
            "check_command": "cmd-check-dhcp-relayed-windows",
            "check_interval": 300,
            "check_period": null,
            "check_timeout": null,
            "command_endpoint": null,
            "disabled": false,
            "display_name": null,
            "enable_active_checks": null,
            "enable_event_handler": null,
            "enable_flapping": null,
            "enable_notifications": true,
            "enable_passive_checks": null,
            "enable_perfdata": false,
            "event_command": null,
            "fields": [],
            "flapping_threshold_high": null,
            "flapping_threshold_low": null,
            "groups": [],
            "host": null,
            "icon_image": "dhcp-relayed.png",
            "icon_image_alt": null,
            "imports": [
                "tpl-service-generic"
            ],
            "max_check_attempts": 5,
            "notes": "This plugin tests if a DHCP server (local or remote) can offer IPv4 addresses. It emulates a DHCP client and checks the DHCP offer response from the DHCP server. It does not send a DHCP request. ",
            "notes_url": "https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/dhcp-relayed",
            "object_name": "tpl-service-dhcp-relayed-windows",
            "object_type": "template",
            "retry_interval": 30,
            "service_set": null,
            "template_choice": null,
            "use_agent": null,
            "use_var_overrides": null,
            "vars": {
                "criticality": "A",
                "dhcp_relayed_windows_always_ok": false,
                "dhcp_relayed_windows_timeout": 7
            },
            "volatile": null,
            "zone": null,
            "uuid": "b39f5cfb-800b-4c1b-80ae-e3808f870f07"
        }
    },
    "Datafield": {
        "1": {
            "varname": "dhcp_relayed_always_ok",
            "caption": "Dhcp Relayed: Always OK?",
            "description": "Always returns OK.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeBoolean",
            "format": null,
            "settings": {},
            "uuid": "780c9a45-836c-4608-9542-b701616f1b30"
        },
        "2": {
            "varname": "dhcp_relayed_mac",
            "caption": "Dhcp Relayed: Mac",
            "description": "Network MAC address to use. Doesn't have to be an existing MAC address. If you specify `--mac=random`, a random MAC address will be used. If omitted, the hardware address is obtained as described in https://docs.python.org/3/library/uuid.html#uuid.getnode.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "uuid": "5d161f04-ae79-4f2a-959e-217c8820e250"
        },
        "3": {
            "varname": "dhcp_relayed_timeout",
            "caption": "Dhcp Relayed: Timeout",
            "description": "Network timeout in seconds.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "uuid": "de9f8eaf-bc4a-4d1d-8c0e-0102c769ce90"
        },
        "4": {
            "varname": "dhcp_relayed_windows_always_ok",
            "caption": "Dhcp Relayed: Always OK?",
            "description": "Always returns OK.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeBoolean",
            "format": null,
            "settings": {},
            "uuid": "3688f108-022f-48a9-bd8f-6a8b0b69d678"
        },
        "5": {
            "varname": "dhcp_relayed_windows_mac",
            "caption": "Dhcp Relayed: Mac",
            "description": "Network MAC address to use. Doesn't have to be an existing MAC address. If you specify `--mac=random`, a random MAC address will be used. If omitted, the hardware address is obtained as described in https://docs.python.org/3/library/uuid.html#uuid.getnode.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "uuid": "e2ea1619-4c62-4248-98dc-2b8b1bc4faf8"
        },
        "6": {
            "varname": "dhcp_relayed_windows_timeout",
            "caption": "Dhcp Relayed: Timeout",
            "description": "Network timeout in seconds.",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "uuid": "2c8f3992-b544-45ac-85f4-325698d26b58"
        }
    }
}
