#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

import unittest

from lib.globals3 import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base3
import lib.shell3


class TestCheck(unittest.TestCase):

    check = './ntp-ntpd3'

    #self.assertEqual(retc, STATE_CRIT)
    #self.assertIn('Waiting for more data (1).', stdout)
    #self.assertRegex(stdout, r'1 error in Kernel Ring Buffer.')

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE01,,0'))
        self.assertIn('No NTP server used.', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE02,,0'))
        self.assertIn('NTP offset is -0.03ms, Stratum is 2', stdout)
        self.assertIn('remote           refid      st t when poll reach   delay   offset  jitter', stdout)
        self.assertIn('==============================================================================', stdout)
        self.assertIn('*ns3.fiberteleco 192.168.10.1     2 u  233   64   30   44.555   -0.030   4.486', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE03,,0'))
        self.assertIn('No NTP server found.', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE04(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE04,,0'))
        self.assertIn('No NTP server used.', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)


if __name__ == '__main__':
    unittest.main()
