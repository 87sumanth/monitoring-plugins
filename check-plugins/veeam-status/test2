#! /usr/bin/env python2
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

import unittest

from lib.globals2 import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base2

        
class TestCheck(unittest.TestCase):

    check = './veeam-status2'

    #self.assertEqual(retc, STATE_CRIT)
    #self.assertIn('Waiting for more data (1).', stdout)
    #self.assertRegexpMatches(stdout, r'1 error in Kernel Ring Buffer.')

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --username=test --password=test --test=examples/EXAMPLE01,,0'))
        self.assertIn('1 VM failed [CRITICAL], 2 VMs with warnings [WARNING], 5 Jobs failed [CRITICAL], 3 Jobs with warnings [WARNING]', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --username=test --password=test --test=examples/EXAMPLE02,,0'))
        self.assertIn('"Backup Volume 01" 18.3% used - total: 1005.5GiB, used: 184.2GiB, free: 821.3GiB', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    
if __name__ == '__main__':
    unittest.main()