#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://git.linuxfabrik.ch/linuxfabrik-icinga-plugins/checks-linux/-/blob/master/CONTRIBUTING.md

from lib.globals2 import *

import lib.base2

import unittest

        
class TestCheck(unittest.TestCase):

    check = './dmesg2'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE01,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE02,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE03,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE04(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE04,,0'))
        self.assertRegexpMatches(stdout, r'1 error in Kernel Ring Buffer.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    def test_if_check_runs_EXAMPLE05(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE05,,0'))
        self.assertRegexpMatches(stdout, r'1 error in Kernel Ring Buffer.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    def test_if_check_runs_EXAMPLE06(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE06,,0'))
        self.assertRegexpMatches(stdout, r'7 errors in Kernel Ring Buffer.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    
if __name__ == '__main__':
    unittest.main()