#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base
import lib.shell


class TestCheck(unittest.TestCase):

    check = '../snmp'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname 127.0.0.1 --test=stdout/EXAMPLE01,,0'))
        self.assertIn('Key                    ! Value                                                                                                                                         ! State     ', stdout)
        self.assertIn('-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+-----------', stdout)
        self.assertIn('Name                   ! BRW38B1DB3B30F4                                                                                                                               ! [OK]      ', stdout)
        self.assertIn('Location               ! Buero                                                                                                                                         ! [OK]      ', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname 127.0.0.2 --test=stdout/EXAMPLE02,,0'))
        self.assertIn('Key                                ! Value                                                                                                                                         ! State     ', stdout)
        self.assertIn('-----------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+-----------', stdout)
        self.assertIn('Name                               ! None                                                                                                                                          ! [OK]      ', stdout)
        self.assertIn('Location                           ! V.01.020|XZ                                                                                                                                   ! [OK]      ', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)


if __name__ == '__main__':
    unittest.main()