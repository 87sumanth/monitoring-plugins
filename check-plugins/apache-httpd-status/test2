#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://git.linuxfabrik.ch/linuxfabrik-icinga-plugins/checks-linux/-/blob/master/CONTRIBUTING.md

from lib.globals2 import *

import lib.base2

import unittest

        
class TestCheck(unittest.TestCase):

    check = './apache-httpd-status2'

    # 01 centos 7 ext status off
    # 02a, 02b centos 7 ext status on
    # 03 centos 8 ext status off
    # 04a, 04b centos 8 ext status off
    # 05 fedora server ext status off
    # 06a, 06b fedora server ext status on

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE01,,'))
        self.assertIn('2/256 workers busy (0.8%; 0 "G"), 5 idle, 249 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE02a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE02b,,'))
        self.assertIn('1/256 workers busy (0.4%; 0 "G"), 7 idle, 248 free; 65.0 accesses, 49.0KiB traffic, 4.3 req/s, 3.3KiB/s, 771.9B/req in the last 15s; Up 8m 30s',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE03,,'))
        self.assertIn('15/400 workers busy (3.8%; 0 "G"), 85 idle, 300 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE04(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE04a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE04b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE04c,,'))
        self.assertIn('10.117.17.40: 13/400 workers busy (3.3%; 0 "G"), 87 idle, 300 free; 547.0 accesses, 11.9MiB traffic, 17.6 req/s, 1s/req, 393.1KiB/s, 22.3KiB/req in the last 31s; Up 1m 12s',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE05(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE05,,'))
        self.assertIn('1/400 workers busy (0.3%; 0 "G"), 74 idle, 325 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE06(self):
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec('rm -f /tmp/linuxfabrik-plugin-cache.db'))
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE06a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE06b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base2.coe(lib.base2.shell_exec(self.check + ' --test=examples/EXAMPLE06c,,'))
        self.assertIn('192.168.122.97: 325/400 workers busy (81.3% [WARNING]; 11 "G"), 75 idle, 1 free; 78.7K accesses, 8.4GiB traffic, 2537.5 req/s, 0.04s/req, 278.6MiB/s, 112.4KiB/req in the last 31s; Up 2m 3s',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)


if __name__ == '__main__':
    unittest.main()