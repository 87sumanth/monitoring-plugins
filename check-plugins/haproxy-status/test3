#! /usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

from lib.globals3 import *

import lib.base3
import lib.shell3

import unittest

        
class TestCheck(unittest.TestCase):

    check = './haproxy-status3'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE01,,0'))
        self.assertRegexpMatches(stdout, r'frontend-https FRONTEND: 2666 sessions \(88.9%\) \[WARNING\], frontend-https-8443 FRONTEND: STOP')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE02,,0'))
        self.assertRegexpMatches(stdout, r'Malformed HAProxy status info\.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --test=examples/EXAMPLE03,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok\.\n\nProxy name      ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE01_lengthy(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --lengthy --test=examples/EXAMPLE01,,0'))
        self.assertRegexpMatches(stdout, r'frontend-https FRONTEND: 2666 sessions \(88.9%\) \[WARNING\], frontend-https-8443 FRONTEND: STOP')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE02_lengthy(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --lengthy --test=examples/EXAMPLE02,,0'))
        self.assertRegexpMatches(stdout, r'Malformed HAProxy status info\.')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_if_check_runs_EXAMPLE03_lengthy(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check + ' --lengthy --test=examples/EXAMPLE03,,0'))
        self.assertRegexpMatches(stdout, r'Everything is ok\.\n\nProxy name      ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

if __name__ == '__main__':
    unittest.main()