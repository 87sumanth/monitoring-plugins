#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

import unittest

from lib.globals3 import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base3
import lib.shell3


class TestCheck(unittest.TestCase):

    check = './safenet-hsm3'

    #self.assertEqual(retc, STATE_CRIT)
    #self.assertIn('Waiting for more data (1).', stdout)
    #self.assertRegex(stdout, r'1 error in Kernel Ring Buffer.')

    def test_if_check_runs_HSM_STATUS_EXAMPLE01(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check +
                                                                   ' --test=examples/HSM_STATUS_EXAMPLE01,,0' +
                                                                   ' --hostname test' +
                                                                   ' --password test'
                                                                   ))
        self.assertIn('[OK]', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_HSM_STATUS_EXAMPLE02(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check +
                                                                   ' --test=examples/HSM_STATUS_EXAMPLE02,,2' +
                                                                   ' --hostname test' +
                                                                   ' --password test'
                                                                   ))
        self.assertIn('[CRITICAL]', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    def test_if_check_runs_HSM_STATUS_EXAMPLE03(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check +
                                                                   ' --test=examples/HSM_STATUS_EXAMPLE03,,1' +
                                                                   ' --hostname test' +
                                                                   ' --password test'
                                                                   ))
        self.assertIn('[WARNING]', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_HSM_STATUS_EXAMPLE04(self):
        stdout, stderr, retc = lib.base3.coe(lib.shell3.shell_exec(self.check +
                                                                   ' --test=examples/HSM_STATUS_EXAMPLE04,,2' +
                                                                   ' --hostname test' +
                                                                   ' --password test'
                                                                   ))
        self.assertIn('[CRITICAL]', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)


if __name__ == '__main__':
    unittest.main()
