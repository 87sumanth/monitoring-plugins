#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://nagios-plugins.org/doc/guidelines.html


__author__  = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2020020401'

DESCRIPTION = 'Prints a list of all clients connected to the OpenVPN Server'

DEFAULT_FILENAME = '/var/log/openvpn-status.log'

DEFAULT_WARN  = None
DEFAULT_CRIT  = None

#====================
import argparse
from traceback import print_exc

from lib.globals import *
from lib.output import unpack_perfdata
from lib.parse_input import evaluate_greater


def parse_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument('-V', '--version',
        action = 'version',
        version = '{0}: v{1} by {2}'.format('%(prog)s', __version__, __author__)
        )

    parser.add_argument('-w', '--warning',
        help = 'Set the warning threshold for the number of connected clients. Default: %(default)s',
        dest = 'WARN',
        type = int,
        default = DEFAULT_WARN,
        )

    parser.add_argument('-c', '--critical',
        help = 'Set the critical threshold for the number of connected clients. Default: %(default)s',
        dest = 'CRIT',
        type = int,
        default = DEFAULT_CRIT,
        )

    parser.add_argument('--filename',
        help = 'Set the path of the log filename. Default: %(default)s',
        dest = 'FILENAME',
        type = str,
        default = DEFAULT_FILENAME,
        )

    return parser.parse_args()


def main():
    try:
        parsed = parse_args()
    except:
        exit(STATE_UNKNOWN)

    try:
        with open(parsed.FILENAME, 'rb') as file:
            counter = 0
            msg = ''
            for line in file:
                if line.startswith('CLIENT_LIST'):
                    counter += 1
                    line = line.split(',')
                    msg += '* {}, ext: {}, int: {}, since: {}\n'.format(line[1], line[2].split(':')[0], line[3], line[7])
    except IOError:
        print('Failed to read file!')
        exit(STATE_UNKNOWN)

    state = evaluate_greater(counter, parsed.WARN, parsed.CRIT)
    perfdata = unpack_perfdata('clients', counter, None, parsed.WARN, parsed.CRIT, 0, None)

    msg = '{} Users connected to OpenVPN Server.\n{}'.format(counter, msg)
    print(msg.strip() + '|' + perfdata.strip())
    exit(state)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print_exc()
        exit(STATE_UNKNOWN)
