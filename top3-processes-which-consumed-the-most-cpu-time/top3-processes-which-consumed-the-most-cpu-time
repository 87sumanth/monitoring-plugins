#! /usr/bin/env python2
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://nagios-plugins.org/doc/guidelines.html

__author__  = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2020022101'

DESCRIPTION = 'Displays the top 3 processes which consume the most cpu time.'

#====================

from lib.globals import *

try:
    import psutil
except ImportError, e:
    print('Python module "psutil" is not installed.')
    exit(STATE_UNKNOWN)
from collections import Counter
from lib.output import seconds2human
import argparse
from traceback import print_exc

def define_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument('-V', '--version',
        action = 'version',
        version = '%(prog)s: v{} by {}'.format(__version__, __author__)
        )

    return parser.parse_args()

def main():
    # parse the command line, exit with UNKNOWN if it fails
    try:
        parsed = define_args()
    except SystemExit as e:
        exit(STATE_UNKNOWN)
        
    msg = ''
    cnt = Counter()

    # only works with psutil version >= 5.3.0
    # for p in psutil.process_iter(attrs=['name', 'cpu_times']):
    #     cnt[p.info['name']] += sum(p.info['cpu_times'][:2])
    try:
        for p in [x.as_dict(attrs=['name', 'cpu_times']) for x in psutil.process_iter()]:
            cnt[p['name']] += sum(p['cpu_times'][:2])
    except psutil.NoSuchProcess:
        pass
        
    for i, p in enumerate(cnt.most_common(3)):
        msg += '{}. {}: {}, '.format(i + 1, p[0], seconds2human(p[1]))

    print(msg[:-2]) # strip trailing ', '
    exit(STATE_OK)

if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print_exc()
        exit(STATE_UNKNOWN)
